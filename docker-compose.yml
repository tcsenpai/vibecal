services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: vibecal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-vibecal_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/models/database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: vibecal
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-vibecal_password}
      JWT_SECRET: ${JWT_SECRET:-change-this-super-secret-jwt-key-in-production}
      PORT: 5000
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/.env:/app/.env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}

volumes:
  postgres_data: